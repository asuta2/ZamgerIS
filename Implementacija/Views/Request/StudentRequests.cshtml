@model ooadproject.Models.Request
@{
    ViewData["Title"] = "Aktuelni zahtjevi";
}
@section SideMenu {
    @await Html.PartialAsync("_StudentSideMenuPartial")
}
<h1>Kreiraj novi zahtjev</h1>
<div class="row">
    <div class="col-md-4">
        <form id="CreateRequestForm" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group mb-3">
                <label asp-for="Type" class="control-label mb-1">Odaberite tip zahtjeva</label>
                <select asp-for="Type" class="form-control" asp-items="ViewBag.RequestTypes"></select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>


            <div class="form-group mb-1">
                <input type="submit" value="Kreiraj zahtjev" class="btn btn-primary" id="submitButton"/>
            </div>
        </form>
        <span id="linkError1" class="text-danger mt-2"></span>
        <div id="successMessage1" class="alert alert-success mt-3" style="display: none;"></div>
    </div>
</div>

@if(ViewBag.PendingRequests.Count > 0)
{

<h1>Aktuelni zahtjevi</h1>
<table class="table table-hover">
    <thead>
        <tr>
            <th>Tip</th>
            <th>Datum</th>
            <th>Status</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var request in ViewBag.PendingRequests)
        {
            <tr>
                <td>
                    @if (request.Type is RequestType.PassedExamsTestimony)
                    {
                        @Html.Raw("Uvjerenje o položenim predmetima")
                        ;
                    }
                    else
                    {
                        @Html.Raw("Potvrda o redovnom studiju")
                        ;
                    }
                </td>
                <td>@request.RequestTime</td>
                <td>@if(request.Status is RequestStatus.Accepted)
                    {
                        @Html.Raw("Odobren")
                        ;
                    }
                    else if(request.Status is RequestStatus.Rejected)
                    {
                        @Html.Raw("Odbijen")
                        ;
                    }
                    else
                    {
                        @Html.Raw("U obradi")
                        ;
                    }
                </td>
                <td>
                    <form asp-action="Delete" asp-route-id="@request.ID" method="post">
                        @Html.AntiForgeryToken()
                        <input type="submit" class="btn btn-primary" value="Poništi" />
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

}
@if (ViewBag.ProcessedRequests.Count > 0)
{   

<h1 class="mt-3">Prošli zahtjevi</h1>
<table class="table table-hover mt-3">
    <thead>
        <tr>
            <th>Tip</th>
            <th>Datum</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var request in ViewBag.ProcessedRequests)
        {
            <tr>
                <td>
                    @if (request.Type is RequestType.PassedExamsTestimony)
                    {
                        @Html.Raw("Uvjerenje o položenim predmetima")
                        ;
                    }
                    else
                    {
                        @Html.Raw("Potvrda o redovnom studiju")
                        ;
                    }
                </td>
                <td>@request.RequestTime</td>
                <td>@if(request.Status is RequestStatus.Accepted)
                    {
                        @Html.Raw("Odobren")
                        ;
                    }
                    else if(request.Status is RequestStatus.Rejected)
                    {
                        @Html.Raw("Odbijen")
                        ;
                    }
                    else
                    {
                        @Html.Raw("U obradi")
                        ;
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
}
<script>
    var createRequestButton = $('#submitButton')
    $('#CreateRequestForm').on('submit', function (e) {
        e.preventDefault();
        var url = '@Url.Action("Create", "Request")';
        var data = $(this).serialize();

        createRequestButton.prop('disabled', true);

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: data
        })
            .then(response => {
                createRequestButton.prop('disabled', false);

                if (response.ok) {
                    $('#successMessage1').text('Uspješno poslano!').show();
                    setTimeout(function () {
                        $('#successMessage1').hide();
                    }, 5000);
                    location.reload();
                } else if (response.status === 400) {
                    response.json().then(data => {
                        $('#linkError1').text(data.error);
                        setTimeout(function () {
                            $('#linkError1').hide();
                        }, 5000);
                    });
                }
            });
    });
</script>


