@model TeacherInputViewModel
@{
    ViewData["Title"] = ViewBag.CurrentCourse.Name;
}
@section SideMenu {
    @await Html.PartialAsync("_TeacherHomePartial")
}
<h1 class="pb-3">@ViewBag.CurrentCourse.Name</h1>
<h2 class="pb-3">Pojedinačni unos rezultata</h2>
<div class="row">
    <div class="col-md-4">
        <form id ="createStudentExamForm" class="needs-validation" novalidate asp-action="Create" asp-controller="StudentExam">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-2">
                <label asp-for="StudentExam.CourseID" class="control-label">Ime studenta</label>
                <select asp-for="StudentExam.CourseID" class="form-control" asp-items="ViewBag.Students"></select>
            </div>
            <div class="form-group mb-2">
                <label asp-for="StudentExam.ExamID" class="control-label">Naziv ispita</label>
                <select asp-for="StudentExam.ExamID" class="form-control" asp-items="ViewBag.Exams"></select>
            </div>
            <div class="form-group mb-2">
                <label asp-for="StudentExam.PointsScored" class="control-label">Osvojeni poeni</label>
                <input asp-for="StudentExam.PointsScored" required class="form-control" />
                <div class="invalid-feedback">
                    Unesite osvojene poene.
                </div>
                <span asp-validation-for="StudentExam.PointsScored" class="text-danger"></span>
            </div>
            <div class="form-group mb-1">
                <button type="submit" id="createStudentExamButton" class="btn btn-primary">
                    Dodaj
                </button>
            </div>
        </form>
        <span id="linkError1" class="text-danger mt-2"></span>
        <div id="successMessage1" class="alert alert-success mt-3" style="display: none;"></div>
    </div>
</div>

<h2 class="pt-3">Grupni unos rezultata</h2>
<div class="row mb-3">
    <div class="col-md-4">
        <form id="saveExamResultsForm" method="post">
            <div class="form-group">
                <label class="control-label pb-1 pt-3">Ispit</label>
                <!--Kasnije kada se doda Homework, pridodati na ovo i Homework-->
                <select class="form-control" asp-items="@ViewBag.Exams" name="id"></select>
            </div>

            <div class="form-group">
                <label for="linkInput" class="control-label pb-1 pt-3">Link</label>
                <input type="url" class="form-control" id="linkInput" placeholder="Unesite spreadsheet link" name="link">
                <span id="linkError" class="text-danger mt-2"></span>
            </div>

            <button type="submit" class="btn btn-primary mt-3" id="submitButton">
                <span class="" id="span1" aria-hidden="true"></span>
                <span role="status" id="span2">Unesi</span>
            </button>
        </form>
        <div id="successMessage" class="alert alert-success mt-3" style="display: none;"></div>
    </div>
</div>

<script>
    $('#linkInput').on('input', function () {
        $('#linkError').text('');
    });

    var submitButton = $('#submitButton');
    var spinnerSpan = submitButton.find('#span1');
    var statusSpan = submitButton.find('#span2');
    var createStudentExamButton = $('#createStudentExamButton');

    (function () {
        'use strict'

        var forms = document.querySelectorAll('.needs-validation')

        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })();

    $(document).ready(function () {
        var form = $('#createStudentExamForm');
        var button = $('#createStudentExamButton');

        var updateButtonStatus = function () {
            button.prop('disabled', !form[0].checkValidity());
        };

        form.find('input,select,textarea').on('input change', updateButtonStatus);

        updateButtonStatus();
    });

    $('#createStudentExamForm').on('submit', function (e) {
        e.preventDefault();
        var url = '@Url.Action("Create", "StudentExam")';
        var data = $(this).serialize();

        createStudentExamButton.prop('disabled', true);

        $.ajax({
            url: url,
            type: 'POST',
            data: data,
            success: function (response) {
                $('#successMessage1').text('Uspješno sačuvano!').show();

                setTimeout(function () {
                    $('#successMessage1').hide();
                }, 5000);
            },
            error: function (jqXHR) {
                if (jqXHR.status === 400) {
                    var response = JSON.parse(jqXHR.responseText);

                    $('#linkError1').text(response.link);
                }
            },
            complete: function () {
                createStudentExamButton.prop('disabled', false);
            }
        });
    });


    $('#saveExamResultsForm').on('submit', function (e) {
        e.preventDefault();
        var url = '@Url.Action("SaveExamResults", "StudentExam")';
        var data = $(this).serialize();

        spinnerSpan.addClass('spinner-border spinner-border-sm');
        submitButton.prop('disabled', true);
        statusSpan.text('Dodavanje...');

        $.ajax({
            url: url,
            type: 'POST',
            data: data,
            success: function (response) {
                $('#linkError').text('');
                $('#linkInput').text('');

                $('#successMessage').text('Uspješno sačuvano!').show();

                setTimeout(function () {
                    $('#successMessage').hide();
                }, 5000);
            },
            error: function (jqXHR) {
                if (jqXHR.status === 400) {
                    var response = JSON.parse(jqXHR.responseText);

                    $('#linkError').text(response.link);
                }
            },
            complete: function () {
                spinnerSpan.removeClass('spinner-border spinner-border-sm');
                statusSpan.text("Unesi");
                submitButton.prop('disabled', false);
            }
        });
    });
</script>

